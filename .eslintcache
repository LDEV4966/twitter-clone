[{"C:\\Users\\user\\Desktop\\web\\twitter-clone\\src\\index.js":"1","C:\\Users\\user\\Desktop\\web\\twitter-clone\\src\\fbase.js":"2","C:\\Users\\user\\Desktop\\web\\twitter-clone\\src\\components\\App.js":"3","C:\\Users\\user\\Desktop\\web\\twitter-clone\\src\\components\\Router.js":"4","C:\\Users\\user\\Desktop\\web\\twitter-clone\\src\\routes\\Home.js":"5","C:\\Users\\user\\Desktop\\web\\twitter-clone\\src\\routes\\Auth.js":"6","C:\\Users\\user\\Desktop\\web\\twitter-clone\\src\\components\\Navigation.js":"7","C:\\Users\\user\\Desktop\\web\\twitter-clone\\src\\routes\\Profile.js":"8"},{"size":249,"mtime":1609255264143,"results":"9","hashOfConfig":"10"},{"size":595,"mtime":1609581894282,"results":"11","hashOfConfig":"10"},{"size":1044,"mtime":1609598742280,"results":"12","hashOfConfig":"10"},{"size":828,"mtime":1609598796368,"results":"13","hashOfConfig":"10"},{"size":1677,"mtime":1609600756732,"results":"14","hashOfConfig":"10"},{"size":2647,"mtime":1609563542206,"results":"15","hashOfConfig":"10"},{"size":343,"mtime":1609566328792,"results":"16","hashOfConfig":"10"},{"size":385,"mtime":1609567065417,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},"1hdwag6",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"21"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"C:\\Users\\user\\Desktop\\web\\twitter-clone\\src\\index.js",["37"],"import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport firebase from \"./fbase\";\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n",["38","39"],"C:\\Users\\user\\Desktop\\web\\twitter-clone\\src\\fbase.js",[],"C:\\Users\\user\\Desktop\\web\\twitter-clone\\src\\components\\App.js",[],"C:\\Users\\user\\Desktop\\web\\twitter-clone\\src\\components\\Router.js",["40"],"C:\\Users\\user\\Desktop\\web\\twitter-clone\\src\\routes\\Home.js",["41","42","43"],"C:\\Users\\user\\Desktop\\web\\twitter-clone\\src\\routes\\Auth.js",["44"],"import { authService, firebaseInstance } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nconst Auth = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const [socialLoginError, setSocialLoginError] = useState(\"\");\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  const onSubmit = async (event) => {\r\n    let data;\r\n    event.preventDefault();\r\n    try {\r\n      if (newAccount) {\r\n        //create account\r\n        // 두 method 모두 Promise 로 반환이기에 await를 사용해야함.\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => {\r\n    setNewAccount(() => !newAccount);\r\n  };\r\n  const socialLogin = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    try {\r\n      await authService.signInWithPopup(provider);\r\n    }catch(error){\r\n      setSocialLoginError(error.message);\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? \"Create Account\" : \"sign In\"}\r\n        />\r\n        {error}\r\n      </form>\r\n      <span onClick={toggleAccount}>\r\n        <button>{newAccount ? \"Sign in\" : \"Create Account\"}</button>\r\n      </span>\r\n      <div>\r\n        <button onClick={socialLogin} name=\"google\">\r\n          Continue with Google\r\n        </button>\r\n        <button onClick={socialLogin} name=\"github\">\r\n          Continue with Github\r\n        </button>\r\n        {socialLoginError}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","C:\\Users\\user\\Desktop\\web\\twitter-clone\\src\\components\\Navigation.js",[],"C:\\Users\\user\\Desktop\\web\\twitter-clone\\src\\routes\\Profile.js",[],{"ruleId":"45","severity":1,"message":"46","line":4,"column":8,"nodeType":"47","messageId":"48","endLine":4,"endColumn":16},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"45","severity":1,"message":"53","line":1,"column":17,"nodeType":"47","messageId":"48","endLine":1,"endColumn":25},{"ruleId":"45","severity":1,"message":"54","line":9,"column":9,"nodeType":"47","messageId":"48","endLine":9,"endColumn":16},{"ruleId":"55","severity":1,"message":"56","line":25,"column":6,"nodeType":"57","endLine":25,"endColumn":8,"suggestions":"58"},{"ruleId":"45","severity":1,"message":"59","line":28,"column":11,"nodeType":"47","messageId":"48","endLine":28,"endColumn":15},{"ruleId":"45","severity":1,"message":"59","line":31,"column":9,"nodeType":"47","messageId":"48","endLine":31,"endColumn":13},"no-unused-vars","'firebase' is defined but never used.","Identifier","unusedVar","no-native-reassign",["60"],"no-negated-in-lhs",["61"],"'useState' is defined but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTweets'. Either include it or remove the dependency array.","ArrayExpression",["62"],"'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},"Update the dependencies array to be: [getTweets]",{"range":"65","text":"66"},[735,737],"[getTweets]"]